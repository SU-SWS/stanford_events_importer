<?php
/**
 * @file
 * Code for the Stanford Events Importer feature.
 */

include_once('stanford_events_importer.features.inc');

/*
 * Implements hook_help().
 */
function stanford_events_importer_help($path, $arg) {
  switch ($path) {
    case 'admin/help#stanford_events_importer':
      $output = '<h2>' . t('To Use') . '</h2>';
      $output .= '<ol><li>' . t('Enable the module and all dependencies') . '</li>';
      $output .= '<li>' . t('Go to !permissions and give selected roles the following permissions:', array('!permissions' => l('admin/people/permissions', 'admin/people/permissions')));
      $output .= '<ul><li>' . t('Import Stanford Event Importer feeds ') . '</li><li>' . t('Stanford Event: Create new content') . '</li><li>' . t('Stanford Event Importer: Create new content ') . '</li></ul></li>';
      $output .= '<li>' . t('!addnode of the type "Stanford Event Importer". Give it a title (eg, "Featured Events") and a feed URL (eg, !feedurl)', array('!addnode' => l('Create a new node', 'node/add/stanford-event-importer'), '!feedurl' => l('http://events.stanford.edu/xml/drupal/v2.php?featured', 'http://events.stanford.edu/xml/drupal/v2.php?featured')));
      $output .= '<ul><li>' . t('Full documentation of the Stanford Events Drupal Feed Service is available at !eventsdrupal', array('!eventsdrupal' => l('http://events.stanford.edu/xml/drupal/', 'http://events.stanford.edu/xml/drupal/'))) . '</li></ul></li>';
      $output .= '<li>' . t('Your events will be imported') . '</li>';
      $output .= '<li>' . t('You can set refresh rate and other options at !editimporter (requires enabling the Feeds UI module)', array('!editimporter' => l('admin/build/feeds/edit/stanford_event_importer', 'admin/build/feeds/edit/stanford_event_importer'))) . '</li></ol>';
      return $output;
  }
}

/*
 * Implements hook_form_FORM_ID_alter().
 */
function stanford_events_importer_form_stanford_event_importer_node_form_alter(&$form, &$form_state, $form_id) {
  $form['feeds']['#access'] = FALSE;
  $form['feeds']['FeedsHTTPFetcher']['source']['#default_value'] = 'http://events.stanford.edu/xml/drupal/v2.php?featured';
  $query = db_select('stanford_events_category_list', 'c');
  $query->fields('c', array('category_id', 'name'));
  $result = $query->execute();
  $categories = $result->fetchAllKeyed();
  asort(&$categories);
  $query = db_select('stanford_events_organization_list', 'o');
  $query->fields('o', array('organization_id', 'name'));
  $result = $query->execute();
  $organizations = $result->fetchAllKeyed();
  asort(&$organizations);
  $form['s_events_cat_org'] = array (
    '#type' => 'fieldset',
    '#title' => t('Category or Organization'),
    '#collapsible' => FALSE,
    '#description' => t('Select <strong>either</strong> a Category <strong>or</strong> an Organization.'),
  );
  $form['s_events_cat_org']['s_events_category'] = array (
    '#type' => 'select',
    '#options' => $categories,
    '#title' => t('Category'),
    '#description' => t('Select a category'),
    '#empty_option' => '-- ' . t('None') . ' --',
  );
  $form['s_events_cat_org']['s_events_organization'] = array (
    '#type' => 'select',
    '#options' => $organizations,
    '#title' => t('Organization'),
    '#description' => t('Select an organization'),
    '#empty_option' => '-- ' . t('None') . ' --',
   );

  // Commenting this out for now because it's unclear whether it's possible to
  // determine whether it's a Category or an Organization.
/*  $optgroup = array();
  $optgroup['Categories'] = $categories;
  $optgroup['Organizations'] = $organizations;
  $form['stanford_events_cat_org'] = array (
    '#type' => 'select',
    '#options' => $optgroup,
    '#title' => t('Category or Organization'),
    '#description' => t('Select a category or organization'),
  );*/
  //dpm($form);
  //make our validation function run first
  if (is_array($form['#validate'])) {
    array_unshift($form['#validate'], 'stanford_events_importer_build_feed_url');
    array_unshift($form['#validate'], 'stanford_events_importer_validate');
  }
  else {
    $form['#validate'][] = 'stanford_events_importer_validate';
    $form['#validate'][] = 'stanford_events_importer_build_feed_url';
  }
  //dpm($form);
}
/*
 * Validate user input.
 */
function stanford_events_importer_validate($form, &$form_state) {
  // Check that the user did not select both a Category and an Organization.
  if (($form_state['values']['s_events_category'] != '') && ($form_state['values']['s_events_organization'] != '')) {
    form_set_error('s_events_cat_org', t('You must choose either a Category or an Organization, not one of each.'));
  }
  // Check that the user did not select both a Category and an Organization.
  if (($form_state['values']['s_events_category'] == '') && ($form_state['values']['s_events_organization'] == '')) {
    form_set_error('s_events_cat_org', t('You must choose either a Category or an Organization.'));
  }
  //dpm($form_state);
}
/*
 * Build the feed URL out of the user's choice in the select list.
 */
function stanford_events_importer_build_feed_url($form, &$form_state) {
  $feed_url = 'http://events.stanford.edu/xml/drupal/v2.php?';
  $category = $form_state['values']['s_events_category'];
  $organization = $form_state['values']['s_events_organization'];
  if ($category != '') {
    $feed_url .= 'category=' . $category;
  }
  elseif ($organization != '') {
    $feed_url .= 'organization=' . $organization;
  }
  else {
    form_set_error(NULL, t('Something has gone horribly, horribly wrong.'));
  }
  $form_state['values']['feeds']['FeedsHTTPFetcher']['source'] = $feed_url;
  //dpm($form_state);
}

/*
 * Fetch the list of organizations.
 */
function stanford_events_importer_get_categories() {
  $category_url = variable_get('stanford_events_category_source', 'http://events.stanford.edu/xml/drupal/v2.php?category-list');
  $categories = drupal_http_request($category_url);
  dpm($categories);
}
